@model Proyecto_DSW1.Models.Cliente

@{
    ViewBag.Title = "Edit";
}
<body style="background-color: #42413D">

<h2 class="text-center" style="color:whitesmoke ;font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif">EDITAR CLIENTE</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color:whitesmoke ;font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif">Datos del Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idCliente)

        <div class="form-group">
            @Html.LabelFor(model => model.idCliente, htmlAttributes: new { @class = "control-label col-md-2 readonly" })
            <div class="col-md-10">
                @Html.TextBox("idCliente", Model.idCliente, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idDistrito, "idDistrito", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idDistrito", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idDistrito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dni_clie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dni_clie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dni_clie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nom_cli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom_cli, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom_cli, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ape_cli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ape_cli, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ape_cli, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mail_cli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mail_cli, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mail_cli, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tel_cli, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tel_cli, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tel_cli, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Cambios" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("REGRESAR", "Index", null, new { @class = "btn btn-warning" })
</div>
<br />
</body>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
